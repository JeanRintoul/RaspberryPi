#!/bin/bash

# Utility to control the GPIO pins of the Raspberry Pi
#
# Copyright 2012 Luke Sandell <lasandell@gmail.com>
# Distributed under the Boost Software License, Version 1.0
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

function gpio()
{
	local pin=$1
	local verb=$2
	local value=$3

	if [ -n "$GPIO_PINS" ]; then
		pin=${GPIO_PINS[pin]}
	fi

	local gpio_path=/sys/class/gpio
	local pin_path=$gpio_path/gpio$pin

	case $verb in
		read)
			cat $pin_path/value
		;;

		write)
			echo $value > $pin_path/value
		;;

		mode)
			if [ ! -e $pin_path ]; then
				echo $pin > $gpio_path/export
			fi
    		echo $value > $pin_path/direction
		;;

		*)
			echo "Control the GPIO pins of the Raspberry Pi"
			echo "Usage: $0 [pin] mode [in|out]"
			echo "       $0 [pin] read"
			echo "       $0 [pin] write [0|1]"
			echo "If the GPIO_PINS is an environment variable containing"
			echo "an array of integers, then up to 17 logical pins (0-16)"
			echo "will  map to the physical pins specified in the array."
		;;
	esac
}

# Just invoke our function if called directly
if [ "$BASH_SOURCE" == "$0" ]; then
	gpio $@
fi

